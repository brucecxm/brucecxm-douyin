<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.example</groupId>
        <artifactId>douyin_service</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>douyin_file</artifactId>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
<dependencies>

    <dependency>
        <groupId>io.minio</groupId>
        <artifactId>minio</artifactId>
        <version>8.5.4</version> <!-- 检查最新版本 -->
    </dependency>


    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-test</artifactId>
        <scope>test</scope>
    </dependency>


<!--    系统模块 能读取cpu内存之类的信息-->
    <dependency>
        <groupId>com.github.oshi</groupId>
        <artifactId>oshi-core</artifactId>
        <version>3.9.1</version>
    </dependency>


<!--    ip2region 是一个高性能的 IP 地址定位库，可以用来实现根据 IP 地址快速查询对应的地理位置信息。-->
    <dependency>
        <groupId>org.lionsoul</groupId>
        <artifactId>ip2region</artifactId>
        <version>1.7.2</version>
    </dependency>


<!--    Flexmark是一个开源的Java库，用于处理和解析Markdown文本。它提供了一套工具和API，可以将Markdown格式的文本解析成HTML或其他格式，或者从HTML转换成Markdown。-->
    <dependency>
        <groupId>com.vladsch.flexmark</groupId>
        <artifactId>flexmark-all</artifactId>
        <version>0.62.2</version> <!-- 使用最新版本或特定版本 -->
    </dependency>

<!--    Java对象和JSON数据之间进行序列化和反序列化的库-->
    <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>2.7</version> <!-- 版本号根据需要选择 -->
    </dependency>


    <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi</artifactId>
        <version>5.2.5</version>
    </dependency>
    <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi-ooxml</artifactId> <!-- 如果你需要支持.xlsx格式的Excel文件 -->
        <version>5.2.5</version> <!-- 根据最新版本选择 -->
    </dependency>



    <dependency>
        <groupId>cn.hutool</groupId>
        <artifactId>hutool-all</artifactId>
        <version>5.7.3</version> <!-- 使用最新版本 -->
    </dependency>


<!--    JavaMail API 是 Java 平台上用于发送和接收电子邮件的标准API。它提供了一组类和接口，使开发者能够与邮件服务器进行通信，-->
<!--    并实现电子邮件的发送和接收功能。在Java项目中，如果需要发送或接收电子邮件，通常会使用JavaMail API来完成这些任务。-->
    <dependency>
        <groupId>com.sun.mail</groupId>
        <artifactId>javax.mail</artifactId>
        <version>1.6.2</version>
    </dependency>


    <!--    jwt依赖-->
    <dependency>
        <groupId>io.jsonwebtoken</groupId>
        <artifactId>jjwt</artifactId>
        <version>0.7.0</version> <!-- 或者你希望使用的版本号 -->
    </dependency>



    <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>easyexcel</artifactId>
        <version>3.2.1</version>
    </dependency>


    <dependency>
        <groupId>org.example</groupId>
        <artifactId>douyin_file_starter</artifactId>
        <version>1.0-SNAPSHOT</version>
    </dependency>

    <dependency>
        <groupId>org.example</groupId>
        <artifactId>douyin_model</artifactId>
        <version>1.0-SNAPSHOT</version>
    </dependency>


</dependencies>
</project>